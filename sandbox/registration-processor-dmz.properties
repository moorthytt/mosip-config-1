####################################################################################################
#---------------------------------------- COMMON PROPERTIES ----------------------------------------
####################################################################################################

#------------------------------------------Spring properties---------------------------------------#

# DB details to which regproc dmz services and stage will connect
mosip.registration.processor.database.hostname=mz.ingress
mosip.registration.processor.database.port=30090

# Persistence properties
javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.registration.processor.database.hostname}:${mosip.registration.processor.database.port}/mosip_regprc?currentSchema=regprc
javax.persistence.jdbc.user=regprcuser
javax.persistence.jdbc.password={cipher}6cbd7358f7a821132862475c16cf48e575c8e2c5f994fa7140ee08f364015b24

# Hibernate properties
hibernate.hbm2ddl.auto=none
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.show_sql=false

# Health checker config followed by all spring apps
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=info,health,refresh

#----------------------------------Registration processor rest client API's------------------------#

# URL prefix to connect to mz services cluster
mz.ingress.url=http://mz.ingress:30080

# Audit Service URLs
AUDIT=${mz.ingress.url}/v1/auditmanager/audits

# Auth Services URLs
KEYBASEDTOKENAPI=${mz.ingress.url}/v1/authmanager/authenticate/clientidsecretkey
GETINDIVIDUALIDFROMUSERID=${mz.ingress.url}/v1/authmanager/individualId
TOKENVALIDATE=${mz.ingress.url}/v1/authmanager/authorize/admin/validateToken
DIGITALSIGNATURE=${mz.ingress.url}/v1/keymanager/sign

# IDA Services URLs
ida-internal-auth-uri=${mz.ingress.url}/idauthentication/v1/internal/auth
ida-internal-get-certificate-uri=${mz.ingress.url}/idauthentication/v1/internal/getCertificate

# Keymanager service URLs
CRYPTOMANAGERDECRYPT=${mz.ingress.url}/v1/keymanager/decrypt
ENCRYPTURL=${mz.ingress.url}/v1/keymanager/encrypt

#------------------------------------Other common libraries properties-----------------------------#

# Landing zone folder where uploaded files are temporarily kept
registration.processor.LANDING_ZONE = /mnt/regproc/landing

# Base base package to be used for scanning components of the IAM adapter to autowire
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter

# Token generation request details
token.request.id=io.mosip.registration.processor
token.request.appid=regproc
token.request.version=1.0
token.request.clientId=mosip-regproc-client
token.request.secretKey={cipher}215f555ae8266e12fed8144620b34fa3f2be2f805a3d28f9e0cfca3e777d18db
token.request.issuerUrl=${mosipbox.public.url}/keycloak/auth/realms/mosip

# Request id to be used for various internal services
mosip.registration.processor.digital.signature.id=io.mosip.registration.processor
mosip.registration.processor.audit.id=mosip.applicanttype.getApplicantType
mosip.registration.processor.crypto.decrypt.id=mosip.cryptomanager.decrypt

# Kernel Crypto signature
registration.processor.signature.isEnabled=true

# The elapse time beyond which the rids will be considered for reprocessing
registration.processor.reprocess.elapse.time=300

# Virus Scanner Connection details
mosip.kernel.virus-scanner.host=clamav
mosip.kernel.virus-scanner.port=80
# virus scanner provider to be passed during runtime. This property will load provider during startup
mosip.regproc.virusscanner.provider=io.mosip.kernel.virusscanner.clamav.impl.VirusScannerImpl

# Extension used for the packets
registration.processor.packet.ext=.zip
# Id used for referencing keys in keymanager belonging to regproc module
registration.processor.application.id=REGISTRATION
# Version string that will be used in the reponses
mosip.registration.processor.application.version=1.0
# Date time pattern that should be followed in timestamp for both request and response
mosip.registration.processor.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
# Timezone that is expected to be followed in the request and response
mosip.registration.processor.timezone=GMT
# Allowed time difference between the request time and the curren time
mosip.registration.processor.grace.period=10800

# The list of comma separated stages that should be successfully completed before packet 
# reaches the stage that uploads packets to the packet store 
mosip.registration.processor.registration.status.stages-before-reaching-packet-store=PacketReceiverStage,SecurezoneNotificationStage

# Stage Group Configuratoins
# Default base packages for stage beans to be scanned in a stage group
mosip.regproc.mosip-stage-executor.stage-beans-base-packages.default=io.mosip.registration.processor,io.mosip.registrationprocessor,io.mosip.registartion.processor
# Add any new base package of Stage bean specific to stage group as below
# mosip.regproc.stage-groups.stage-beans-base-packages.<stage_group_name>=${mosip.regproc.stage-groups.stage-beans-base-packages.default}
# Example: mosip.regproc.stage-groups.stage-beans-base-packages.stage-group-1=${mosip.regproc.stage-groups.stage-beans-base-packages.default},my.stage.bean.base.package

# Mostly used for forming the config server URI in stages
packet.info.storage.service=*
registration.processor.identityjson=registration-processor-identity.json
config.server.file.storage.uri=${spring.cloud.config.uri}/${packet.info.storage.service}/${spring.profiles.active}/${spring.cloud.config.label}/


# main processor used in stages
registration.processor.main-processes=NEW,UPDATE,LOST,RES_UPDATE,ACTIVATE,DEACTIVATE
# sub processor used in stages
registration.processor.sub-processes=BIOMETRIC_CORRECTION

#--------------------------------Registration core library properties------------------------------#

# Regproc supported eventbus types: vertx, kafka. Defaults to vertx if the config is not present
mosip.regproc.eventbus.type=kafka

# Kafka event bus config, will be used only when the type is kafka
# Kafka cluster servers comma separated, common for all stages and camel bridge
mosip.regproc.eventbus.kafka.bootstrap.servers=kafka-0.kafka-headless.default.svc.cluster.local:9092,kafka-1.kafka-headless.default.svc.cluster.local:9092,kafka-2.kafka-headless.default.svc.cluster.local:9092

# workel pool size to process multiple requests parallely by stages
worker.pool.size=10

####################################################################################################
#------------------------------------ WORKFLOW ENGINE PROPERTIES -----------------------------------
####################################################################################################

#------------------------------------------camel-bridge--------------------------------------------#

mosip.regproc.camel.bridge.eventbus.kafka.commit.type=single
mosip.regproc.camel.bridge.eventbus.kafka.max.poll.records=100
mosip.regproc.camel.bridge.eventbus.kafka.poll.frequency=100
# Above 3 camel kafka config will have no effect, it is kept because MosipBridgeFactory extends 
# MosipVerticleAPIManager
# Kafka consumer group id, used by kafka to identify multiple instances of the same consumer
mosip.regproc.camel.bridge.eventbus.kafka.group.id=camel-brdige-dmz

# Camel Route xml files corresponding to the dmz flow
camel.dmz.active.flows.file.names=registration-processor-camel-routes-new-dmz.xml,registration-processor-camel-routes-update-dmz.xml,registration-processor-camel-routes-activate-dmz.xml,registration-processor-camel-routes-res-update-dmz.xml,registration-processor-camel-routes-deactivate-dmz.xml,registration-processor-camel-routes-lost-dmz.xml,registration-processor-camel-routes-res-reprint-dmz.xml,registration-processor-camel-routes-biometric-correction-dmz.xml
# Current zone on which services and stages are runnning, can be dmz or mz
registration.processor.zone=dmz
# Pause settings used by camel to match expression and pause packet processing 
# Eg: [{"matchExpression": "$.tags[?(@['HOTLISTED'] == 'operator')]","pauseFor": 432000,"defaultResumeAction": "STOP_PROCESSING","fromAddress": ".*","resumeRemoveTags" : "HOTLISTED"}]
mosip.regproc.camelbridge.pause-settings=[]
# Prefix used by all the address in the camel flow
mosip.regproc.camelbridge.endpoint-prefix=eventbus://


####################################################################################################
#------------------------------------ REGPROC SERVICES PROPERTIES ----------------------------------
####################################################################################################

#-------------------------------------Registration Status service----------------------------------#

# Exposed API ids and versions used for request validation
mosip.registration.processor.registration.status.id=mosip.registration.status
mosip.registration.processor.registration.sync.id=mosip.registration.sync
mosip.registration.processor.lostrid.id=mosip.registration.lostrid
# Registration External Status Id
mosip.registration.processor.registration.external.status.id=mosip.registration.external.status
# Packet external Status Id
mosip.registration.processor.packet.external.status.id=mosip.registration.packet.external.status
mosip.registration.processor.sync.version=1.0
mosip.registration.processor.registration.status.version=1.0
mosip.registration.processor.lostrid.version=1.0
# Registration External Status Version
mosip.registration.processor.registration.external.status.version=1.0
# Packet Status Version
mosip.registration.processor.packet.external.status.version=1.0

# LatestTransactionTypeCodes Before uploading to Object Store
mosip.registration.processor.packet.status.transactiontypecodes-before-uploading-to-objectstore=PACKET_RECEIVER,SECUREZONE_NOTIFICATION
# LatestTransactionTypeCode  uploading to Object Store
mosip.registration.processor.packet.status.transactiontypecodes-uploading-to-objectstore=UPLOAD_PACKET
# LatestTransactionTypeCodes  time based resend required
mosip.registration.processor.packet.status.transactiontypecodes-time-based-resend-required=PACKET_RECEIVER

# Maximum no of time client is allowed to upload a packet on failure
registration.processor.max.retry=3

# The comma separate list of external statuses that should be considered as processed 
# for search API response consumed by regclient
mosip.registration.processor.registration.status.external-statuses-to-consider-processed=UIN_GENERATED,REREGISTER,REJECTED,REPROCESS_FAILED

# this property is used in lostrid api to get postal code 
mosip.registration.processor.postalcode.req.url=${mz.ingress.url}/v1/masterdata/registrationcenters

####################################################################################################
#------------------------------------- STAGE SPECIFIC PROPERTIES -----------------------------------
####################################################################################################

#-----------------------------------------Packet Receiver Stage------------------------------------#

# Supported commmit config: auto, batch, single
mosip.regproc.packet.receiver.eventbus.kafka.commit.type=single
# Maximum records that can be received in one poll from kafka
mosip.regproc.packet.receiver.eventbus.kafka.max.poll.records=100
# Interval between each poll calls to kafka in milli sec
mosip.regproc.packet.receiver.eventbus.kafka.poll.frequency=100
# Kafka consumer group id, used by kafka to identify multiple instances of the same consumer
mosip.regproc.packet.receiver.eventbus.kafka.group.id=packet-receiver-stage

# Base sevlet path for the stage
mosip.regproc.packet.receiver.server.servlet.path=/registrationprocessor/v1/packetreceiver
# Port number in which the application will run
mosip.regproc.packet.receiver.server.port=8081
# Port number to be used by eventbus for communicating with other vertx apps in the cluster
mosip.regproc.packet.receiver.eventbus.port=5711

# Flag to disable the copying of tags from the packet manger to the message event
mosip.regproc.packet.receiver.message.tag.loading.disable=true
#Maximum file size to be upload from packet receiver
registration.processor.max.file.size=5
# Module id that should be added in the responses
mosip.registration.processor.packet.id=mosip.registration.packet


####################################################################################################
#----------------------------- NOT USED PROPERTIES (To be removed later) ---------------------------
####################################################################################################

#-----packet-utility----------
# The known packet sources. Should be set as all fieldCategory present in idschema
# (NOTE : if fieldCategory is set as pvt then the source should be id)
registration.processor.sourcepackets=id,evidence,optional
# The mandatory default source packet.(In default configuration this is thd id packet)
packet.default.source=id
# the default schema field cagegory (ex - private)
schema.default.fieldCategory=pvt

registration.processor.notification_service_subscriber_hub_url=https://dev.mosip.net/websub/hub
registration.processor.notification_service_subscriber_secret={cipher}1b1c1a60abf045c34fff60457976178e5c70c949634ad568f5a5510007bfa438
registration.processor.notification_service_subscriber_topic=registration_processor_workflow_completed_event
registration.processor.notification_service_subscriber_callback_url=https://dev.mosip.net/registrationprocessor/v1/notification/callback/notify

mosip.regproc.message.tag.loading.disable=true
